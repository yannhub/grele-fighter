#!/bin/bash

# Script pour mettre √† jour automatiquement la version du cache
# Usage: ./update-cache-version.sh [type]
# type peut √™tre: major, minor, patch (d√©faut: patch)

SW_FILE="sw.js"
UPDATE_TYPE=${1:-patch}

echo "üîÑ Mise √† jour de la version du cache..."

# V√©rifier si le fichier sw.js existe
if [ ! -f "$SW_FILE" ]; then
    echo "‚ùå Erreur: $SW_FILE non trouv√©"
    exit 1
fi

# Extraire la version actuelle
CURRENT_VERSION=$(grep -o 'const CACHE_VERSION = "[^"]*"' $SW_FILE | sed 's/const CACHE_VERSION = "//;s/"//')

if [ -z "$CURRENT_VERSION" ]; then
    echo "‚ùå Erreur: Version actuelle non trouv√©e dans $SW_FILE"
    exit 1
fi

echo "üìã Version actuelle: $CURRENT_VERSION"

# S√©parer les parties de la version (major.minor.patch)
IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
MAJOR=${VERSION_PARTS[0]:-0}
MINOR=${VERSION_PARTS[1]:-0}
PATCH=${VERSION_PARTS[2]:-0}

# Mettre √† jour selon le type
case $UPDATE_TYPE in
    "major")
        MAJOR=$((MAJOR + 1))
        MINOR=0
        PATCH=0
        ;;
    "minor")
        MINOR=$((MINOR + 1))
        PATCH=0
        ;;
    "patch"|*)
        PATCH=$((PATCH + 1))
        ;;
esac

NEW_VERSION="$MAJOR.$MINOR.$PATCH"

echo "üÜï Nouvelle version: $NEW_VERSION"

# Remplacer la version dans le fichier
sed -i "s/const CACHE_VERSION = \"[^\"]*\"/const CACHE_VERSION = \"$NEW_VERSION\"/" "$SW_FILE"

# V√©rifier que le changement a √©t√© effectu√©
UPDATED_VERSION=$(grep -o 'const CACHE_VERSION = "[^"]*"' $SW_FILE | sed 's/const CACHE_VERSION = "//;s/"//')

if [ "$UPDATED_VERSION" = "$NEW_VERSION" ]; then
    echo "‚úÖ Version mise √† jour avec succ√®s: $NEW_VERSION"
    
    # Afficher un r√©sum√© des modifications
    echo ""
    echo "üìù R√©sum√© des modifications:"
    echo "  - Version: $CURRENT_VERSION ‚Üí $NEW_VERSION"
    echo "  - Type de mise √† jour: $UPDATE_TYPE"
    echo "  - Date: $(date)"
else
    echo "‚ùå Erreur: La mise √† jour a √©chou√©"
    exit 1
fi

echo ""
echo "üöÄ N'oubliez pas de:"
echo "   1. Tester votre application"
echo "   2. V√©rifier que les nouvelles ressources sont bien cach√©es"
echo "   3. Commit vos changements si tout fonctionne"